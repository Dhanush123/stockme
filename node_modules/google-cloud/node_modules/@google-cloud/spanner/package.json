{
  "name": "@google-cloud/spanner",
  "version": "0.3.0",
  "author": {
    "name": "Google Inc."
  },
  "description": "Cloud Spanner Client Library for Node.js",
  "contributors": [
    {
      "name": "Dave Gramlich",
      "email": "callmehiphop@gmail.com"
    },
    {
      "name": "Stephen Sawchuk",
      "email": "sawchuk@gmail.com"
    }
  ],
  "main": "./src/index.js",
  "files": [
    "src",
    "AUTHORS",
    "CONTRIBUTORS",
    "COPYING"
  ],
  "repository": {
    "type": "git",
    "url": "git+https://github.com/googlecloudplatform/google-cloud-node.git"
  },
  "keywords": [
    "google apis client",
    "google api client",
    "google apis",
    "google api",
    "google",
    "google cloud platform",
    "google cloud",
    "cloud",
    "spanner"
  ],
  "dependencies": {
    "@google-cloud/common": "^0.13.0",
    "@google-cloud/common-grpc": "^0.3.0",
    "arrify": "^1.0.1",
    "checkpoint-stream": "^0.1.0",
    "events-intercept": "^2.0.0",
    "extend": "^3.0.0",
    "generic-pool": "^3.1.4",
    "google-gax": "^0.12.3",
    "google-proto-files": "^0.10.0",
    "is": "^3.1.0",
    "lodash.chunk": "^4.2.0",
    "lodash.snakecase": "^4.1.1",
    "merge-stream": "^1.0.1",
    "split-array-stream": "^1.0.0",
    "stream-events": "^1.0.1",
    "string-format-obj": "^1.1.0",
    "through2": "^2.0.3"
  },
  "devDependencies": {
    "async": "^2.0.1",
    "concat-stream": "^1.6.0",
    "methmeth": "^1.1.0",
    "mocha": "^3.0.1",
    "multiline": "^1.0.2",
    "proxyquire": "^1.7.11",
    "uuid": "^3.0.1"
  },
  "scripts": {
    "publish-module": "node ../../scripts/publish.js spanner",
    "test": "mocha test/*.js",
    "system-test": "mocha system-test/*.js --no-timeouts --bail"
  },
  "license": "Apache-2.0",
  "engines": {
    "node": ">=4.0.0"
  },
  "readme": "# @google-cloud/spanner ([Alpha][versioning])\n> Cloud Spanner Client Library for Node.js\n\n*Looking for more Google APIs than just Cloud Spanner? You might want to check out [`google-cloud`][google-cloud].*\n\n- [API Documentation][gcloud-spanner-docs]\n- [Official Documentation][cloud-spanner-docs]\n\n\n```sh\n$ npm install --save @google-cloud/spanner\n```\n```js\nvar spanner = require('@google-cloud/spanner')({\n  projectId: 'grape-spaceship-123',\n  keyFilename: '/path/to/keyfile.json'\n});\n\nvar instance = spanner.instance('my-instance');\nvar database = instance.database('my-database');\n\n// Create a table.\nvar schema =\n  'CREATE TABLE Singers (' +\n  '  SingerId INT64 NOT NULL,' +\n  '  FirstName STRING(1024),' +\n  '  LastName STRING(1024),' +\n  '  SingerInfo BYTES(MAX),' +\n  ') PRIMARY KEY(SingerId)';\n\ndatabase.createTable(schema, function(err, table, operation) {\n  if (err) {\n    // Error handling omitted.\n  }\n\n  operation\n    .on('error', function(err) {})\n    .on('complete', function() {\n      // Table created successfully.\n    });\n});\n\n// Insert data into the table.\nvar table = database.table('Singers');\n\ntable.insert({\n  SingerId: 10,\n  FirstName: 'Eddie',\n  LastName: 'Wilson'\n}, function(err) {\n  if (!err) {\n    // Row inserted successfully.\n  }\n});\n\n// Run a query as a readable object stream.\ndatabase.runStream('SELECT * FROM Singers')\n  .on('error', function(err) {})\n  .on('data', function(row) {\n    // row.toJSON() = {\n    //   SingerId: 10,\n    //   FirstName: 'Eddie',\n    //   LastName: 'Wilson'\n    // }\n  }\n  })\n  .on('end', function() {\n    // All results retrieved.\n  });\n```\n\n\n## Authentication\n\nIt's incredibly easy to get authenticated and start using Google's APIs. You can set your credentials on a global basis as well as on a per-API basis. See each individual API section below to see how you can auth on a per-API-basis. This is useful if you want to use different accounts for different Cloud services.\n\n### On Google Cloud Platform\n\nIf you are running this client on Google Cloud Platform, we handle authentication for you with no configuration. You just need to make sure that when you [set up the GCE instance][gce-how-to], you add the correct scopes for the APIs you want to access.\n\n``` js\nvar spanner = require('@google-cloud/spanner')();\n// ...you're good to go!\n```\n\n### Elsewhere\n\nIf you are not running this client on Google Cloud Platform, you need a Google Developers service account. To create a service account:\n\n1. Visit the [Google Developers Console][dev-console].\n2. Create a new project or click on an existing project.\n3. Navigate to  **APIs & auth** > **APIs section** and turn on the following APIs (you may need to enable billing in order to use these services):\n  * Cloud Spanner API\n4. Navigate to **APIs & auth** >  **Credentials** and then:\n  * If you want to use a new service account key, click on **Create credentials** and select **Service account key**. After the account key is created, you will be prompted to download the JSON key file that the library uses to authenticate your requests.\n  * If you want to generate a new service account key for an existing service account, click on **Generate new JSON key** and download the JSON key file.\n\n``` js\nvar projectId = process.env.GCLOUD_PROJECT; // E.g. 'grape-spaceship-123'\n\nvar spanner = require('@google-cloud/spanner')({\n  projectId: projectId,\n\n  // The path to your key file:\n  keyFilename: '/path/to/keyfile.json'\n\n  // Or the contents of the key file:\n  credentials: require('./path/to/keyfile.json')\n});\n\n// ...you're good to go!\n```\n\n\n[versioning]: https://github.com/GoogleCloudPlatform/google-cloud-node#versioning\n[google-cloud]: https://github.com/GoogleCloudPlatform/google-cloud-node/\n[gce-how-to]: https://cloud.google.com/compute/docs/authentication#using\n[dev-console]: https://console.developers.google.com/project\n[gcloud-spanner-docs]: https://googlecloudplatform.github.io/google-cloud-node/#/docs/spanner\n[cloud-spanner-docs]: https://cloud.google.com/spanner\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/googlecloudplatform/google-cloud-node/issues"
  },
  "homepage": "https://github.com/googlecloudplatform/google-cloud-node#readme",
  "_id": "@google-cloud/spanner@0.3.0",
  "_shasum": "48fbaf60b0fcffd8f16ada7da322afa16885bfd0",
  "_resolved": "https://registry.npmjs.org/@google-cloud/spanner/-/spanner-0.3.0.tgz",
  "_from": "https://registry.npmjs.org/@google-cloud/spanner/-/spanner-0.3.0.tgz"
}
