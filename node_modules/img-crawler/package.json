{
  "name": "img-crawler",
  "author": {
    "name": "Raul Vieira",
    "email": "radvieira@gmail.com"
  },
  "contributors": [
    {
      "name": "Mike Melo",
      "email": "melom@intelliware.ca"
    }
  ],
  "version": "0.0.2",
  "description": "A module to download images from a given URL",
  "main": "main.js",
  "dependencies": {
    "htmlparser": "~1.7.6",
    "request": "~2.12.0",
    "public": "git://github.com/mike-melo/morefs.git#master"
  },
  "devDependencies": {
    "mocha": "~1.8.1",
    "rimraf": "~2.1.2"
  },
  "scripts": {
    "test": "make test"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/radvieira/img-crawler.git"
  },
  "keywords": [
    "crawl",
    "crawler",
    "image",
    "images",
    "downloader",
    "graphics",
    "spider"
  ],
  "license": "BSD",
  "readmeFilename": "README.md",
  "directories": {
    "test": "test"
  },
  "readme": "<h1>img-crawler</h1>\n<a href=\"https://travis-ci.org/radvieira/img-crawler\">\n\t<img src=\"https://travis-ci.org/radvieira/img-crawler.png\" />\n</a>\n<p>A Node module for downloading images to disk from a given URL.</p>\n<h2>Installation</h2>\n<pre>\n    <code>npm install img-crawler</code>\n</pre>\n<h2>Running the tests</h2>\n<p>From the module directory run:</p>\n<pre>\n    <code>npm test</code>\n</pre>\n<p>Without npm:</p>\n<pre>\n    <code>make test</code>\n</pre>\n<h2>Usage</h2>\n<p>Download imgs from 'pearljam.com' and write them to the 'pj-imgs' directory.  \nThe dir will be created if not found and resolved to an absolute path.\n</p>\n<pre><code>\n     var crawler = require('img-crawler');\n          \n     var opts = {\n         url: 'http://pearljam.com',\n         dist: 'pj-imgs'\n     };\n     \n     crawler.crawl(opts, function(err, data) {\n         console.log('Downloaded %d from %s', data.imgs.length, opts.url);\n     });    \n    </code>\n</pre>\n<h3>The callback</h3>\n<p>Keeping inline with node convention the callback first accepts an error object \nfollowed by data representing the downloaded images.  The err object will be provided\nif loading the web page fails.  Failures are reported in the img responses.\n</p>\n<p>Here's an example of a response:</p>\n<pre>\n    <code>{\n        imgs: [\n            {\n                src: 'img/a-img.png', \n                statusCode: 200,\n                success: true,\n                path: '/Users/radvieira/my-imgs/img/a-img.png'\n            },\n            {\n                src: 'img/another-img.png', \n                statusCode: 404,\n                success: false\n            }            \n        ]\n    }\n    </code>\n</pre>\n<p>In this case the first image was downloaded and written to disk while the other failed.\nNotice how there is no path attribute for the failed download.\n</p>\n",
  "_id": "img-crawler@0.0.2",
  "dist": {
    "shasum": "f8d45a671f4dc983341cf4d4b498a1a44a418093",
    "tarball": "https://registry.npmjs.org/img-crawler/-/img-crawler-0.0.2.tgz"
  },
  "_npmVersion": "1.1.66",
  "_npmUser": {
    "name": "radvieira",
    "email": "radvieira@gmail.com"
  },
  "maintainers": [
    {
      "name": "radvieira",
      "email": "radvieira@gmail.com"
    }
  ],
  "_shasum": "f8d45a671f4dc983341cf4d4b498a1a44a418093",
  "_resolved": "https://registry.npmjs.org/img-crawler/-/img-crawler-0.0.2.tgz",
  "_from": "img-crawler@latest"
}
